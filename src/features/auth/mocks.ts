import { Contact } from "@common/models/contacts/contact";

export const mockUsers: Contact[] = [
  {
    id: "user_0",
    displayName: "Alice",
    email: "alice@example.com",
    phoneNumber: "+10000000000",
    photoURL: "https://i.pravatar.cc/150?img=0",
    providerId: "firebase",
    emailVerified: true,
    isAnonymous: false,
    metadata: {} as any,
    providerData: [],
    refreshToken: "",
    tenantId: null,
  },
  {
    id: "user_1",
    displayName: "Ben",
    email: "ben@example.com",
    phoneNumber: "+10000000001",
    photoURL: "https://i.pravatar.cc/150?img=1",
    providerId: "firebase",
    emailVerified: true,
    isAnonymous: false,
    metadata: {} as any,
    providerData: [],
    refreshToken: "",
    tenantId: null,
  },
  {
    id: "user_2",
    displayName: "Cleo",
    email: "cleo@example.com",
    phoneNumber: "+10000000002",
    photoURL: "https://i.pravatar.cc/150?img=2",
    providerId: "firebase",
    emailVerified: true,
    isAnonymous: false,
    metadata: {} as any,
    providerData: [],
    refreshToken: "",
    tenantId: null,
  },
  {
    id: "user_3",
    displayName: "Diego",
    email: "diego@example.com",
    phoneNumber: "+10000000003",
    photoURL: "https://i.pravatar.cc/150?img=3",
    providerId: "firebase",
    emailVerified: true,
    isAnonymous: false,
    metadata: {} as any,
    providerData: [],
    refreshToken: "",
    tenantId: null,
  },
  {
    id: "user_4",
    displayName: "Eva",
    email: "eva@example.com",
    phoneNumber: "+10000000004",
    photoURL: "https://i.pravatar.cc/150?img=4",
    providerId: "firebase",
    emailVerified: true,
    isAnonymous: false,
    metadata: {} as any,
    providerData: [],
    refreshToken: "",
    tenantId: null,
  },
  {
    id: "user_5",
    displayName: "Felix",
    email: "felix@example.com",
    phoneNumber: "+10000000005",
    photoURL: "https://i.pravatar.cc/150?img=5",
    providerId: "firebase",
    emailVerified: true,
    isAnonymous: false,
    metadata: {} as any,
    providerData: [],
    refreshToken: "",
    tenantId: null,
  },
  {
    id: "user_6",
    displayName: "Grace",
    email: "grace@example.com",
    phoneNumber: "+10000000006",
    photoURL: "https://i.pravatar.cc/150?img=6",
    providerId: "firebase",
    emailVerified: true,
    isAnonymous: false,
    metadata: {} as any,
    providerData: [],
    refreshToken: "",
    tenantId: null,
  },
  {
    id: "user_7",
    displayName: "Hugo",
    email: "hugo@example.com",
    phoneNumber: "+10000000007",
    photoURL: "https://i.pravatar.cc/150?img=7",
    providerId: "firebase",
    emailVerified: true,
    isAnonymous: false,
    metadata: {} as any,
    providerData: [],
    refreshToken: "",
    tenantId: null,
  },
  {
    id: "user_8",
    displayName: "Isla",
    email: "isla@example.com",
    phoneNumber: "+10000000008",
    photoURL: "https://i.pravatar.cc/150?img=8",
    providerId: "firebase",
    emailVerified: true,
    isAnonymous: false,
    metadata: {} as any,
    providerData: [],
    refreshToken: "",
    tenantId: null,
  },
  {
    id: "user_9",
    displayName: "Jasper",
    email: "jasper@example.com",
    phoneNumber: "+10000000009",
    photoURL: "https://i.pravatar.cc/150?img=9",
    providerId: "firebase",
    emailVerified: true,
    isAnonymous: false,
    metadata: {} as any,
    providerData: [],
    refreshToken: "",
    tenantId: null,
  },
] as unknown as Contact[];

export function getRandomUser(allowedUids?: string[]): Contact {
  const users =
    allowedUids != null
      ? mockUsers.filter((user) => allowedUids.includes(user.id))
      : mockUsers;
  const index = Math.floor(Math.random() * users.length);
  return users[index];
}
